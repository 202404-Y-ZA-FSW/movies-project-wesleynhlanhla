{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\Nhlanhla's repo\\\\Nhlanhla-Advocate-repo\\\\Movie website\\\\movies-project-wesleynhlanhla\\\\src\\\\Pages\\\\MoviesPg\\\\movie.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { apiKey } from '../Util/API';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movie = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const fetchData = async () => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}`);\n      const data = await response.json();\n      setMovies(data.results);\n      console.log(data.results); // Logging the fetched data\n    } catch (error) {\n      console.error(\"Error fetching movies:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []); // Empty dependency array ensures useEffect runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: movie.title\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Movie, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["useState","useEffect","apiKey","jsxDEV","_jsxDEV","Movie","_s","movies","setMovies","fetchData","response","fetch","data","json","results","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","title","id","src","backdrop_path","alt","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Desktop/Nhlanhla's repo/Nhlanhla-Advocate-repo/Movie website/movies-project-wesleynhlanhla/src/Pages/MoviesPg/movie.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { apiKey } from '../Util/API';\r\n\r\nconst Movie = () => {\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}`);\r\n            const data = await response.json();\r\n            setMovies(data.results);\r\n            console.log(data.results); // Logging the fetched data\r\n        } catch (error) {\r\n            console.error(\"Error fetching movies:\", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []); // Empty dependency array ensures useEffect runs only once\r\n\r\n    return (\r\n        <div>\r\n            <h1>Movies</h1>\r\n            <ul>\r\n                {movies.map(movie => (\r\n                    <div>\r\n<li key={movie.id}>{movie.title}</li>\r\n<img src={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`} alt=\"\" />\r\n                    </div>\r\n                    \r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Movie;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sDAAsDT,MAAM,EAAE,CAAC;MAC5F,MAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,SAAS,CAACI,IAAI,CAACE,OAAO,CAAC;MACvBC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACZQ,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACIL,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACflB,OAAA;MAAAc,QAAA,EACKX,MAAM,CAACgB,GAAG,CAACC,KAAK,iBACbpB,OAAA;QAAAc,QAAA,gBACpBd,OAAA;UAAAc,QAAA,EAAoBM,KAAK,CAACC;QAAK,GAAtBD,KAAK,CAACE,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAAC,eACrClB,OAAA;UAAKuB,GAAG,EAAE,mCAAmCH,KAAK,CAACI,aAAa,EAAG;UAACC,GAAG,EAAC;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAER;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAChB,EAAA,CAhCID,KAAK;AAAAyB,EAAA,GAALzB,KAAK;AAkCX,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}